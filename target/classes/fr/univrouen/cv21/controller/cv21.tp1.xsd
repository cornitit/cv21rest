<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://univ.fr/cv21"
  xmlns="http://univ.fr/cv21"
  elementFormDefault="qualified"
>
  <!-- TODO: la restriction des 2 points consécutif dans mail -->
  <xs:element name="cv21">
    <xs:complexType>
      <xs:all>
        <xs:element ref="Identitie" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element ref="objectif" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element ref="prof" minOccurs="0" maxOccurs="1"></xs:element>
        <xs:element ref="competences" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element ref="divers" minOccurs="1" maxOccurs="1"></xs:element>
      </xs:all>
    </xs:complexType>
  </xs:element>

<xs:simpleType name="telType">
  <xs:restriction base="xs:string">
    <xs:pattern value="([0-9]{10})|([0-9]{2} ){4}([0-9]{2})|([0-9] )([0-9]{3} ){2}([0-9]{3})|\+33 [0-9] ([0-9]{2} ){3}[0-9]{2}"></xs:pattern>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="genreType">
  <xs:restriction base="xs:string">
    <xs:pattern value="Mme|M.|Mrs|Miss|Mr"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="string32Type">
  <xs:restriction base="xs:string">
    <xs:maxLength value="32"></xs:maxLength>
    <xs:pattern value="[A-Za-zÀ-ÖØ-öø-ÿ0-9 \-']*"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="string50Type">
  <xs:restriction base="xs:string">
    <xs:maxLength value="50"></xs:maxLength>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="string128Type">
  <xs:restriction base="xs:string">
    <xs:maxLength value="128"></xs:maxLength>
    <!-- &amp; à la place de & -->
    <xs:pattern value="[A-Za-zÀ-ÖØ-öø-ÿ0-9 \-'.,;:~@()#!?$*=&amp;]*"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="mailType">
  <xs:restriction base="xs:string">
    <!-- XSD n'accepte pas cette regex :) <xs:pattern value="[A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]+([A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]|\.(?!\.))*@[A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]+([A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]|\.(?!\.))*\.[a-zA-Z]{2,3}"></xs:pattern> -->
    <xs:pattern value="[A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]+([A-Za-zÀ-ÖØ-öø-ÿ0-9\-_.])*@[A-Za-zÀ-ÖØ-öø-ÿ0-9\-_]+([A-Za-zÀ-ÖØ-öø-ÿ0-9\-_.])*\.[a-zA-Z]{2,3}"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="niveauType">
  <xs:restriction base="xs:string">
    <xs:pattern value="(I){1,3}|I{0,1}V"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="langType">
  <xs:restriction base="xs:string">
    <xs:pattern value="[a-z]{2}"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="certType">
  <xs:restriction base="xs:string">
    <xs:pattern value="MAT|CLES|TOEIC"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="nivsType">
  <xs:restriction base="xs:string">
    <xs:pattern value="A1|A2|B1|B2|C1|C2"></xs:pattern>
  </xs:restriction>
</xs:simpleType> 

<xs:simpleType name="niviType">
  <xs:restriction base="xs:integer">
    <xs:minInclusive value="10"></xs:minInclusive>
    <xs:maxInclusive value="990"></xs:maxInclusive>
  </xs:restriction>
</xs:simpleType> 


  <xs:element name="Identitie">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="genre" type="genreType" minOccurs="1" maxOccurs="1"></xs:element>
        <xs:element name="nom" minOccurs="1" maxOccurs="1" type="string50Type"></xs:element>
        <xs:element name="prenom" minOccurs="1" maxOccurs="1" type="string50Type"></xs:element>
        <xs:element name="tel" type="telType" minOccurs="0" maxOccurs="1"></xs:element>
        <xs:element name="mel" type="mailType" minOccurs="0" maxOccurs="1">
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="objectif">
    <xs:complexType>
      <xs:attribute name="stage" use="optional" type="string128Type"></xs:attribute>
      <xs:attribute name="emploi" use="optional" type="string128Type"></xs:attribute>
      <!-- Eclipse renvoie une erreur pour: <xs:assert test="(@stage and not(@emploi)) or (not(@stage) and @emploi)"></xs:assert> -->
    </xs:complexType>
  </xs:element>

  <xs:element name="prof">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="expe" minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="datedeb" minOccurs="1" maxOccurs="1" type="xs:date"></xs:element>
              <xs:element name="datefin" minOccurs="1" maxOccurs="1" type="xs:date"></xs:element>
              <xs:element name="titre" minOccurs="1" maxOccurs="1" type="string128Type"></xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="competences">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="diplome" minOccurs="1" maxOccurs="6">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="date" minOccurs="1" maxOccurs="1" type="xs:date"></xs:element>
              <xs:element name="titre" minOccurs="1" maxOccurs="1" type="string32Type"></xs:element>
              <xs:element name="etab" minOccurs="1" maxOccurs="1" type="string32Type"></xs:element>
            </xs:sequence>
            <xs:attribute name="niveau" use="required" type="niveauType"></xs:attribute>
          </xs:complexType>
        </xs:element>

        <xs:element name="certif" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="datedeb" minOccurs="1" maxOccurs="1" type="xs:date"></xs:element>
              <xs:element name="datefin" minOccurs="1" maxOccurs="1" type="xs:date"></xs:element>
              <xs:element name="titre" minOccurs="1" maxOccurs="1" type="string32Type"></xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="divers">
    <xs:complexType>
      <xs:sequence>
        <xs:element name="lv" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="lang" use="required" type="langType"></xs:attribute>
            <xs:attribute name="cert" use="required" type="certType"></xs:attribute>
            <xs:attribute name="nivs" use="optional" type="nivsType"></xs:attribute>
            <xs:attribute name="nivi" use="optional" type="niviType"></xs:attribute>
          </xs:complexType>
        </xs:element>

        <xs:element name="autre" minOccurs="1" maxOccurs="3">
          <xs:complexType>
            <xs:attribute name="titre" type="string32Type"></xs:attribute>
            <xs:attribute name="comment" type="string128Type"></xs:attribute>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:simpleType name="NewSimpleType">
  	<xs:restriction base="xs:string"></xs:restriction>
  </xs:simpleType>
</xs:schema>
